---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: eg
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: custom-proxy-config
  namespace: envoy-gateway-system
spec:
  provider:
    kubernetes:
      envoyService:
        type: ClusterIP
    type: Kubernetes
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  labels:
    istio.io/dataplane-mode: ambient
  name: eg-waypoint
  namespace: envoy-gateway-system
spec:
  gatewayClassName: eg
  infrastructure:
    parametersRef:
      group: gateway.envoyproxy.io
      kind: EnvoyProxy
      name: custom-proxy-config
  listeners:
  - allowedRoutes:
      namespaces:
        from: Same
    hostname: backend
    name: backend-short
    port: 3000
    protocol: HTTP
  - allowedRoutes:
      namespaces:
        from: Same
    name: fake-hbone
    port: 15008
    protocol: TCP
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: backend
  namespace: envoy-gateway-system
spec:
  hostnames:
  - backend
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: eg-waypoint
  rules:
  - backendRefs:
    - group: ""
      kind: Service
      name: backend
      port: 3000
      weight: 1
    filters:
    - requestHeaderModifier:
        add:
        - name: add-header
          value: foo
      type: RequestHeaderModifier
    matches:
    - path:
        type: PathPrefix
        value: /
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: BackendTrafficPolicy
metadata:
  name: policy-httproute
  namespace: envoy-gateway-system
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: backend 
  rateLimit:
    type: Local
    local:
      rules:
      - clientSelectors:
        - headers:
          - name: x-user-id
            type: Distinct 
        limit:
          requests: 3
          unit: Minute 
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: nginx
  name: test-client
  namespace: envoy-gateway-system
spec:
  containers:
  - image: nginx
    name: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: envoy-gateway-system
spec:
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - image: gcr.io/k8s-staging-gateway-api/echo-basic:v20231214-v1.0.0-140-gf544a46e
        name: backend
        ports:
        - containerPort: 3000
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
    istio.io/use-waypoint: eg-waypoint
    service: backend
  name: backend
  namespace: envoy-gateway-system
spec:
  ports:
  - name: http
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: backend
